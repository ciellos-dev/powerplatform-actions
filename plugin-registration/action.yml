# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
name: 'PluginRegistration'
description: 'Power Platform Plugin Registration'
inputs:
  crm-connection-string:
    description: 'Connection string'
    required: false
    default: ''

  registration-type:
    description: 'Upsert: Updates existing assembly/types/steps and creates if not present.  Reset: Deletes existing assembly/types/steps and re-creates everything.  Delsert: Deletes types/steps not present in json followed by Upsert'
    required: false
    default: 'Upsert'

  assembly-path:
    description: 'Path of assembly to be register.'
    required: false
    default: ''

  use-split-assembly:
    description: 'Set to true to split plugin assembly.'
    required: false
    default: ''

  project-file-path:
    description: 'Plugin project file path.'
    required: false
    default: ''

  mapping-file:
    description: 'Plugin registration json/xml mapping used to register assembly/types/steps.  Mapping json PluginRegistrationMappingExample.json/xml file sample can be found [here](https://github.com/WaelHamze/xrm-ci-framework/blob/master/MSDYNV9/Xrm.Framework.CI/Xrm.Framework.CI.PowerShell.Cmdlets/PluginRegistration).  JSON schema which will help you to generate plugin registration mapping can be found [here](https://github.com/WaelHamze/xrm-ci-framework/blob/master/MSDYNV9/Xrm.Framework.CI/Xrm.Framework.CI.PowerShell.Cmdlets/PluginRegistration/PluginRegistrationSchema.json).  How to use schema can be found [here](https://blogs.msdn.microsoft.com/webdev/2014/04/10/intellisense-for-json-schema-in-the-json-editor/).  To generate plugin registration JSON mapping from existing assembly/type/steps from a specific solution, please use this [script](https://github.com/WaelHamze/xrm-ci-framework/blob/master/MSDYNV9/Xrm.Framework.CI/Xrm.Framework.CI.PowerShell.Scripts/GetPluginRegistration.ps1).'
    required: false
    default: ''

  solution-name:
    description: 'Unique name of solution to which plugin/workflow assembly has to be register.'
    required: false
    default: ''

  crm-connection-timeout:
    description: 'The connection timeout in seconds'
    required: false
    default: '360'

runs:
  using: "composite"
  steps:
    - run: |
        Write-Host "registrationType = " ${{ inputs.registration-type }}
        Write-Host "assemblyPath = " ${{ inputs.assembly-path }}
        Write-Host "projectFilePath = " ${{ inputs.project-file-path }}
        Write-Host "useSplitAssembly = " ${{ inputs.use-split-assembly }}
        Write-Host "MappingFile = " ${{ inputs.mapping-file }}
        Write-Host "solutionName = " ${{ inputs.solution-name }}
        Write-Host "crmConnectionTimeout = " $CrmConnectionTimeout
        Write-Host "crmConnectionString = " '${{ inputs.crm-connection-string }}'
        ${{ github.action_path }}\..\dist\plugin-registration\PluginRegistration.ps1  -CrmConnectionString '${{ inputs.crm-connection-string }}' `
                                                                                      -RegistrationType ${{ inputs.registration-type }} `
                                                                                      -AssemblyPath ${{ inputs.assembly-path }} `
                                                                                      -UseSplitAssembly ${{ inputs.use-split-assembly }} `
                                                                                      -ProjectFilePath ${{ inputs.project-file-path }} `
                                                                                      -MappingFile ${{ inputs.mapping-file }} `
                                                                                      -SolutionName ${{ inputs.solution-name }} `
                                                                                      -CrmConnectionTimeout ${{ inputs.crm-connection-timeout }} 
      shell: powershell
