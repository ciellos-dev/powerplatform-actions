# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
name: 'PluginRegistration'
description: 'Power Platform Plugin Registration'
inputs:
  CrmConnectionString:
    description: 'More information on [format](https://docs.microsoft.com/en-us/powerapps/developer/common-data-service/xrm-tooling/use-connection-strings-xrm-tooling-connect#connection-string-parameters)'
    required: true
    default: ''

  RegistrationType:
    description: 'Upsert: Updates existing assembly/types/steps and creates if not present.  Reset: Deletes existing assembly/types/steps and re-creates everything.  Delsert: Deletes types/steps not present in json followed by Upsert'
    required: true
    default: 'Upsert'

  AssemblyPath:
    description: 'Path of assembly to be register.'
    required: true
    default: ''

  UseSplitAssembly:
    description: 'Set to true to split plugin assembly.'
    required: false
    default: ''

  ProjectFilePath:
    description: 'Plugin project file path.'
    required: false
    default: ''

  MappingFile:
    description: 'Plugin registration json/xml mapping used to register assembly/types/steps.  Mapping json PluginRegistrationMappingExample.json/xml file sample can be found [here](https://github.com/WaelHamze/xrm-ci-framework/blob/master/MSDYNV9/Xrm.Framework.CI/Xrm.Framework.CI.PowerShell.Cmdlets/PluginRegistration).  JSON schema which will help you to generate plugin registration mapping can be found [here](https://github.com/WaelHamze/xrm-ci-framework/blob/master/MSDYNV9/Xrm.Framework.CI/Xrm.Framework.CI.PowerShell.Cmdlets/PluginRegistration/PluginRegistrationSchema.json).  How to use schema can be found [here](https://blogs.msdn.microsoft.com/webdev/2014/04/10/intellisense-for-json-schema-in-the-json-editor/).  To generate plugin registration JSON mapping from existing assembly/type/steps from a specific solution, please use this [script](https://github.com/WaelHamze/xrm-ci-framework/blob/master/MSDYNV9/Xrm.Framework.CI/Xrm.Framework.CI.PowerShell.Scripts/GetPluginRegistration.ps1).'
    required: false
    default: ''

  SolutionName:
    description: 'Unique name of solution to which plugin/workflow assembly has to be register.'
    required: true
    default: ''

  CrmConnectionTimeout:
    description: 'The connection timeout in seconds'
    required: false
    default: '360'

runs:
  using: "composite"
  steps:
    - run: |
        ${{ github.action_path }}\..\dist\plugin-registration\plugin-registration.ps1 -CrmConnectionString ${{ inputs.CrmConnectionString }} `
                                                                                      -RegistrationType ${{ inputs.RegistrationType }} `
                                                                                      -AssemblyPath ${{ inputs.AssemblyPath }} `
                                                                                      -UseSplitAssembly ${{ inputs.UseSplitAssembly }} `
                                                                                      -ProjectFilePath ${{ inputs.ProjectFilePath }} `
                                                                                      -MappingFile ${{ inputs.MappingFile }} `
                                                                                      -SolutionName ${{ inputs.SolutionName }} `
                                                                                      -CrmConnectionTimeout ${{ inputs.CrmConnectionTimeout }} 
      shell: powershell
